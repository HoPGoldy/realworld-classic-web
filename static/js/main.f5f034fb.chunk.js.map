{"version":3,"sources":["components/ApiError.js","plugins/history.js","plugins/api.js","components/ArticleLikeButton.js","components/Tag.js","components/FeedItem.js","plugins/mergeQuery.js","components/Pagination.js","components/ArticleList.js","components/CommentItem.js","components/FollowButton.js","components/Footer.js","components/PageTitle.js","components/Separator.js","plugins/useLocation.js","plugins/userContext.js","pages/Home.js","pages/Login.js","pages/Article.js","pages/User.js","pages/EditArtcle.js","pages/Profile.js","App.js","index.js"],"names":["ApiError","props","errorMsg","Object","keys","length","entries","map","line","join","error","className","history","createHashHistory","changeTitle","location","pageTitle","pathname","split","document","title","listen","window","setToken","newToken","axios","defaults","headers","common","authorization","baseURL","interceptors","response","use","resp","data","status","push","undefined","localStorage","removeItem","useRequest","service","options","useAhooksRequest","requestMethod","params","ArticleLikeButton","article","favorited","favoritesCount","slug","onChange","likeLabel","onClickLike","method","url","manual","onSuccess","run","style","fontSize","onClick","Tag","tag","to","search","FeedItem","author","timeLabel","body","tagList","updateItem","username","mergeQuery","newQuery","query","Qs","parse","ignoreQueryPrefix","stringify","Pagination","total","size","maxPage","Math","ceil","Array","fill","_","index","page","ArticleList","formatArticle","dayjs","updatedAt","format","limit","offset","initialData","articles","refreshDeps","formatResult","articlesCount","loading","mutate","paginationGroup","useMemo","onItemUpdate","newArticle","newList","item","color","feed","CommentItem","createTime","currentUserName","id","onDelete","onDeleteComment","deleteContent","FollowButton","userInfo","onUserInfoChange","onChangeFollow","following","profile","footer","href","target","PageTitle","summary","summaryContent","Separator","useLocation","useOriginLocation","userContext","createContext","LoginProvider","useState","setUserInfo","Provider","value","children","Home","useContext","yourFeed","tags","queryUrl","createForm","form","getFieldProps","getFieldError","resetFields","useHistory","setErrorMsg","isLoginPage","onSubmit","a","validateFields","user","api","post","setItem","token","replace","console","errors","renderField","label","field","type","rules","required","initialValue","useEffect","titleContent","setFieldsValue","useParams","createdAt","updateTime","formatComment","comment","comments","loadingDelay","commentLoading","commentError","fetchAtriclComment","articleLoading","articleError","setArticle","onSubmitComment","delete","useMount","commentContent","description","myArticle","detail","placeholder","height","TAB","key","User","tab","selfInfo","find","isMyself","bio","image","fetchArticle","formData","postSetting","onError","onSubmitSetting","email","App","fetchUserInfo","getItem","path","component","Login","Article","EditArtcle","Profile","from","ReactDOM","render","getElementById"],"mappings":"2OAaeA,EAZE,SAAUC,GAEvB,IAAQC,EAAaD,EAAbC,SACR,OAAKA,GAAYC,OAAOC,KAAKF,GAAUG,QAAU,EAAU,KAGvCF,OAAOG,QAAQJ,GAAUK,KAAI,SAAAC,GAAI,OAAIA,EAAKC,KAAK,QAChDF,KAAI,SAAAG,GACnB,OAAO,qBAAKC,UAAU,QAAf,SAAoCD,GAARA,O,gCCPrCE,EAAUC,cAKVC,EAAc,SAAAC,GAChB,IAAMC,EAAYD,EAASE,SAASC,MAAM,KAAKT,KAAK,KACpDU,SAASC,MAAT,UAAoBJ,EAApB,0BAGJJ,EAAQS,OAAOP,GACfA,EAAYQ,OAAOP,UAEJH,Q,SCRFW,EAAW,SAAAC,GACfA,EACAC,IAAMC,SAASC,QAAQC,OAAOC,cAA9B,gBAAuDL,UADtCC,IAAMC,SAASC,QAAQC,OAAOC,eAKxDJ,IAAMC,SAASI,QAAU,+BAEzBL,IAAMM,aAAaC,SAASC,KACxB,SAAAC,GAAI,OAAIA,EAAKC,QACb,SAAAzB,GAYI,MAV8B,MAA1BA,EAAMsB,SAASI,QACfxB,EAAQyB,KAAK,UACbd,OAASe,GACTC,aAAaC,WAAW,UAGO,MAA1B9B,EAAMsB,SAASI,QACpBxB,EAAQyB,KAAK,SAGX3B,KAKP,IAAM+B,EAAa,SAAUC,EAASC,GACzC,OAAOC,YAAiBF,EAAD,YAAC,eACjBC,GADgB,IAEnBE,cAAe,SAAAC,GAAM,OAAIrB,IAAMqB,QAIxBrB,IAAf,EChBesB,EAtBW,SAAU9C,GAChC,MAAmEA,EAA3D+C,QAAWC,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,eAAgBC,EAA9C,EAA8CA,KAAQC,EAAanD,EAAbmD,SAGhDC,EAAS,UAAMJ,EAAY,qBAAa,oBAA/B,YAA4CC,GAE9CI,EAAgBb,EAAW,CACpCc,OAAQN,EAAY,SAAW,OAC/BO,IAAI,aAAD,OAAeL,EAAf,cACJ,CACCM,QAAQ,EAERC,UAAW,SAAAvB,GAAI,OAAIiB,EAASjB,EAAKa,YAN7BW,IASR,OACI,sBAAMC,MAAO,CAAEC,SAAU,UAAYlD,UAAU,WAAWmD,QAASR,EAAnE,SACKD,KCNEU,EARH,SAAUC,GAClB,OACI,wCACU,cAAC,IAAD,CAAMC,GAAI,CAAEhD,SAAU,QAASiD,OAAO,QAAD,OAAUF,IAA/C,SAAyDA,IADnE,SAAWA,IC0BJG,EA7BE,SAAUlE,GACvB,IAAQmB,EAA8DnB,EAA9DmB,MAAOgD,EAAuDnE,EAAvDmE,OAAQC,EAA+CpE,EAA/CoE,UAAWC,EAAoCrE,EAApCqE,KAAMC,EAA8BtE,EAA9BsE,QAASpB,EAAqBlD,EAArBkD,KAAMqB,EAAevE,EAAfuE,WAEvD,OACI,+BAEI,+BACI,cAAC,IAAD,CAAMP,GAAE,mBAAcd,GAAtB,SAA+B/B,IADnC,WAEI,cAAC,EAAD,CAAmB4B,QAAS/C,EAAOmD,SAAUoB,OAGjD,+BACI,+BACI,wCADJ,IACmB,eAAC,IAAD,CAAMP,GAAE,gBAAWG,EAAOK,SAAlB,OAAR,cAA2CL,EAAOK,eAGrE,+BAAI,2CAAJ,IAAuBJ,KAGtBE,GAAWA,EAAQlE,OAAS,GAAK,+BAC9B,qCAD8B,IACjBkE,EAAQhE,IAAIwD,SAIjC,4BAAIO,Q,iBChBDI,EARI,SAAUC,GACzB,IAAMC,EAAK,2BACJC,IAAGC,MAAMxD,OAAOP,SAASmD,OAAQ,CAAEa,mBAAmB,KACtDJ,GAEP,OAAOE,IAAGG,UAAUJ,ICUTK,EAhBI,SAAUhF,GACzB,IAAQiF,EAAqBjF,EAArBiF,MAAR,EAA6BjF,EAAdkF,YAAf,MAAsB,GAAtB,EAEMC,EAAUC,KAAKC,KAAKJ,EAAQC,GAElC,OAAOI,MAAMH,GAASI,OAAOjF,KAAI,SAACkF,EAAGC,GAAJ,OAC7B,wCAEI,cAAC,IAAD,CAAMzB,GAAI,SAAAlD,GACN,MAAM,GAAN,OAAUA,EAASE,SAAnB,YAA+ByD,EAAW,CAAEiB,KAAMD,MADtD,SAEIA,EAAQ,IAJhB,SAAWA,O,iBCgEJE,EA7DK,SAAU3F,GAC1B,IAAQ+D,EAAwD/D,EAAxD+D,IAAR,EAAgE/D,EAAnD0F,YAAb,MAAoB,EAApB,EAAuBvB,EAAyCnE,EAAzCmE,OAAQnB,EAAiChD,EAAjCgD,UAA/B,EAAgEhD,EAAtBuD,WAA1C,MAAgD,YAAhD,EAEMqC,EAAgB,SAAA7C,GAAO,kCACtBA,GADsB,IAGzBqB,UAAWyB,IAAM9C,EAAQ+C,WAAWC,OAAO,0BAc/C,EAA8DvD,EAV9C,CACZe,MACAV,OAAQ,CACJsB,SAAQnB,YAAWe,MACnBiC,MApBY,GAqBZC,OArBY,GAqBJP,IAKkE,CAC9EQ,YAAa,CAAEC,SAAU,GAAIlB,MAAO,GACpCmB,YAAa,CAACjC,EAAQnB,EAAWO,EAAKQ,EAAK2B,GAC3CW,aAAc,gBAAGF,EAAH,EAAGA,SAAyBlB,EAA5B,EAAaqB,cAAb,MAAyC,CAAEH,SAAUA,EAAS7F,IAAIsF,GAAgBX,YAHpG,IAAQ/C,KAAQiE,EAAhB,EAAgBA,SAAUlB,EAA1B,EAA0BA,MAASxE,EAAnC,EAAmCA,MAAO8F,EAA1C,EAA0CA,QAASC,EAAnD,EAAmDA,OAO7CC,EAAkBC,mBAAQ,kBAAM,cAAC,EAAD,CAAYzB,MAAOA,EAAOC,KAjC5C,OAiCuE,CAACD,IAItF0B,EAAe,SAAAC,GACjB,IAAMC,EAAUV,EAAS7F,KAAI,SAAAwG,GACzB,OAAQA,EAAK5D,OAAS0D,EAAW1D,KAAQ0C,EAAcgB,GAAcE,KAGzEN,EAAO,CAAEL,SAAUU,EAAS5B,WAIhC,OAAIxE,EAAc,mBAAGkD,MAAO,CAAEoD,MAAO,OAAnB,2BACdR,EAAgB,2CACI,IAApBJ,EAAS/F,OAAqB,6DAG9B,qCACI,kCACI,6BACK+F,EAAS7F,KAAI,SAAA0G,GAAI,OAAI,cAAC,EAAD,2BAA8BA,GAA9B,IAAoCzC,WAAYoC,IAAjCK,EAAK9D,aAIjD+B,EAAQ,GAAK,sBAAKvE,UAAU,YAAf,UACV,6CACC+F,EACD,uBAAM,8BC/BPQ,EAlCK,SAAUjH,GAC1B,IAAQmE,EAA+EnE,EAA/EmE,OAAQ+C,EAAuElH,EAAvEkH,WAAY7C,EAA2DrE,EAA3DqE,KAAM8C,EAAqDnH,EAArDmH,gBAAiBC,EAAoCpH,EAApCoH,GAAelE,EAAqBlD,EAAhC+C,QAAWG,KAAQmE,EAAarH,EAAbqH,SAG7DC,EAAoB9E,EAAW,CACxCe,IAAI,aAAD,OAAeL,EAAf,qBAAgCkE,GAAM9D,OAAQ,UAClD,CACCE,QAAQ,EAERC,UAAW4D,IALP3D,IAQJ6D,EAAgB,KAUpB,OARIJ,IAAoBhD,EAAOK,WAC3B+C,EACI,sBAAM7G,UAAU,WAAWiD,MAAO,CAAEoD,MAAO,OAASlD,QAASyD,EAA7D,oCAOJ,+BACI,8BAAIjD,EAAJ,IAAWkD,KAEX,+BACI,+BAAI,wCAAJ,IAAoBpD,EAAOK,YAC3B,+BAAI,2CAAJ,IAAuB0C,YCPxBM,EArBM,SAAUxH,GAC3B,IAAQyH,EAA+BzH,EAA/ByH,SAAUC,EAAqB1H,EAArB0H,iBAGLC,EAAmBnF,EAAW,CACvCe,IAAI,aAAD,OAAekE,EAASjD,SAAxB,WAEHlB,OAAQmE,EAASG,UAAY,SAAW,QACzC,CACCpE,QAAQ,EAERC,UAAW,SAAAvB,GAAI,OAAIwF,EAAiBxF,EAAK2F,YAPrCnE,IAUR,OACI,sBAAMhD,UAAU,WAAWmD,QAAS8D,EAApC,mBACQF,EAASG,UAAY,wBAAgB,sBAD7C,YAC4DH,EAASjD,aClBhEsD,EACT,qBAAKpH,UAAU,YAAf,SACI,oBAAGA,UAAU,wBAAb,UACI,wCADJ,OAGI,mBAAGqH,KAAK,oDAAoDC,OAAO,UAAnE,uBAHJ,WAKI,wCALJ,OAOI,mBAAGD,KAAK,8BAA8BC,OAAO,UAA7C,4BCIGC,EAbG,YAA+B,IAAnB9G,EAAkB,EAAlBA,MAAO+G,EAAW,EAAXA,QAE3BC,EAAkBD,EACpB,4BAAuB,oBAAZA,EAAyBA,IAAYA,IADlB,KAGlC,OACI,sBAAKxH,UAAU,YAAf,UACI,6BAAKS,IACJgH,MCJEC,EAJG,WACd,OAAO,sD,OCUIC,EALK,WAChB,IAAMvH,EAAWwH,cACjB,OAAO,2BAAKxH,GAAZ,IAAsB6D,MAAOC,IAAGC,MAAM/D,EAASmD,OAAQ,CAAEa,mBAAmB,O,QCPnEyD,EAAcC,0BAKdC,EAAgB,SAAAzI,GACzB,MAAgC0I,wBAASrG,GAAzC,mBAAOoF,EAAP,KAAiBkB,EAAjB,KAEA,OACI,cAACJ,EAAYK,SAAb,CAAsBC,MAAO,CAAEpB,WAAUkB,eAAzC,SACK3I,EAAM8I,YCiCJC,EAnCF,WACT,IAAQtB,EAAauB,qBAAWT,GAAxBd,SAER,EADiBY,IAC4B1D,MAArCZ,EAAR,EAAQA,IAAR,IAAa2B,YAAb,MAAoB,EAApB,EAAuBuD,EAAvB,EAAuBA,SAGvB,EAA4BzG,EAAW,QAAS,CAAE6D,aAAc,SAAAnE,GAAI,OAAIA,EAAKgH,QAArEhH,KAAMgH,OAAd,MAAqB,GAArB,EAEMC,EAAY1B,GAAYwB,EAAY,iBAAmB,YAE7D,OACI,gCACI,cAAC,EAAD,CAAW9H,MAAM,UAAU+G,QAAQ,qCAEnC,gCACI,uBACA,sBAAKxH,UAAU,YAAf,UACI,+CAAsBwI,EAAK5I,IAAIwD,MAGnC,uBACA,wCACA,cAAC,IAAD,CAAME,GAAG,QAAT,yBARJ,WASKD,GAAQ,qCACL,eAAC,IAAD,CAAMC,GAAE,oBAAeD,GAAvB,cAAgCA,KAD3B,cAIR0D,GAAY,cAAC,IAAD,CAAMzD,GAAE,mBAAR,0BAGjB,cAAC,EAAD,CAAaT,IAAK4F,EAAUpF,IAAKA,EAAK2B,KAAMA,Q,iCCgDzC0D,iBA9ED,SAAUpJ,GACpB,MAAgEA,EAAxDqJ,KAAQC,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,cAAeC,EAA9C,EAA8CA,YACtCb,EAAgBK,qBAAWT,GAA3BI,YACFhI,EAAU8I,cACV3I,EAAWuH,cAEjB,EAAgCK,wBAASrG,GAAzC,mBAAOpC,EAAP,KAAiByJ,EAAjB,KAGMC,EAAc,iBAA4B,WAAtB7I,EAASE,UAG7B4I,EAAQ,uCAAG,gCAAAC,EAAA,sEACM7J,EAAMqJ,KAAKS,iBADjB,cACPC,EADO,OAEbL,OAAYrH,GAFC,SAMHkB,EAAMoG,IAAgB,cAAgB,QANnC,SAOUK,EAAIC,KAAK1G,EAAK,CAAEwG,SAP1B,OAOH7H,EAPG,OAUTI,aAAa4H,QAAQ,QAAShI,EAAK6H,KAAKI,OACxC7I,EAASY,EAAK6H,KAAKI,OACnBxB,EAAYzG,EAAK6H,MAEjBpJ,EAAQyJ,QAAQ,SAdP,kDAkBTC,QAAQ5J,MAAM,KAAEsB,SAASG,KAAKoI,QAC9BZ,EAAY,KAAE3H,SAASG,KAAKoI,QAnBnB,0DAAH,qDAwBRC,EAAc,SAACC,EAAOC,EAAOC,GAAf,OAChB,qCACI,kCACKF,EADL,IAEI,iDAAWlB,EAAcmB,EAAO,CAAEE,MAAO,CAAC,CAAEC,UAAU,IAASC,aAAc,MAA7E,IAAoFH,KAAMA,GAAQ,aAEtG,sBAAMhK,UAAU,QAAhB,SAAyB6I,EAAckB,KACvC,2BAKRK,qBAAU,WACNpB,EAAY,IACZF,MACD,CAAC1I,EAASE,SAAUwI,IAGvB,IAAMuB,EAAepB,IACjB,cAAC,EAAD,CAAWxI,MAAM,UAAU+G,QAAS,kBAAM,cAAC,IAAD,CAAMlE,GAAG,YAAT,iCAC1C,cAAC,EAAD,CAAW7C,MAAM,UAAU+G,QAAS,kBAAM,cAAC,IAAD,CAAMlE,GAAG,SAAT,iCAE9C,OACI,oCACK+G,EAED,iCACI,cAAC,EAAD,CAAU9K,SAAUA,KAElB0J,KAAiBY,EAAY,WAAY,YAC1CA,EAAY,QAAS,SACrBA,EAAY,WAAY,WAAY,YACrC,uBAEA,wBAAQG,KAAK,SAAS7G,QAAS+F,EAA/B,SACKD,IAAgB,UAAY,qB,SCgElCP,iBApIC,SAAUpJ,GACtB,MAAmEA,EAA3DqJ,KAAQC,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,cAAeyB,EAA9C,EAA8CA,eACxCrK,EAAU8I,cAERrC,EAAO6D,cAAP7D,GAEAK,EAAauB,qBAAWT,GAAxBd,SAEF7B,EAAgB,SAAA7C,GAAO,kCACtBA,GADsB,IAEzBmE,WAAYrB,IAAM9C,EAAQmI,WAAWnF,OAAO,uBAC5CoF,WAAYtF,IAAM9C,EAAQ+C,WAAWC,OAAO,0BAG1CqF,EAAgB,SAAAC,GAAO,kCACtBA,GADsB,IAEzBnE,WAAYrB,IAAMwF,EAAQH,WAAWnF,OAAO,0BAIhD,EAEIvD,EAAW,aAAD,OAAc4E,EAAd,aAA6B,CACvC5D,QAAQ,EACR6C,aAAc,SAAAnE,GAAI,OAAIA,EAAKoJ,SAAShL,IAAI8K,IACxCG,aAAc,MALlB,IACIrJ,KAAMoJ,OADV,MACqB,GADrB,EACkCE,EADlC,EACyBjF,QAAgCkF,EADzD,EACkDhL,MAA0BiL,EAD5E,EACuEhI,IAQvE,EAEIlB,EAAW,aAAD,OAAc4E,GAAM,CAC9Bf,aAAc,SAAAnE,GAAI,OAAI0D,EAAc1D,EAAKa,YAFnCA,EADV,EACIb,KAAwByJ,EAD5B,EACmBpF,QAAgCqF,EADnD,EAC4CnL,MAA6BoL,EADzE,EACiErF,OAM3DsF,EAAe,uCAAG,4BAAAjC,EAAA,sEACE7J,EAAMqJ,KAAKS,iBADb,cACduB,EADc,gBAEdrB,EAAIC,KAAJ,oBAAsB7C,EAAtB,aAAqC,CAAEiE,YAFzB,OAIpBL,EAAe,CAAE3G,KAAM,KACvBqH,IALoB,2CAAH,qDASfrE,EAAQ,uCAAG,sBAAAwC,EAAA,sEACPG,EAAI+B,OAAJ,oBAAwB3E,IADjB,OAGbzG,EAAQyJ,QAAR,gBAAyB3C,EAASjD,WAHrB,2CAAH,qDASd,GAHAwH,YAASN,GAGLC,EAAgB,OAAO,2CAC3B,GAAIC,EAAc,OAAO,mBAAGjI,MAAO,CAAEoD,MAAO,OAAnB,mCAEzB,IAGIkF,EAHI9K,EAAsE4B,EAAtE5B,MAAO+K,EAA+DnJ,EAA/DmJ,YAAahF,EAAkDnE,EAAlDmE,WAAYiE,EAAsCpI,EAAtCoI,WAAY9G,EAA0BtB,EAA1BsB,KAAMF,EAAoBpB,EAApBoB,OAAQG,EAAYvB,EAAZuB,QAI9DmH,EAAcQ,EAAiB,mBAAGtI,MAAO,CAAEoD,MAAO,OAAnB,oCAC1ByE,EAAgBS,EAAiB,aACjCX,EAASlL,QAAU,EAAG6L,EAAiB,eACvCX,EAASlL,OAAS,IAAG6L,EAAiBX,EAAShL,KAAI,SAAA+K,GAExD,OAAO,cAAC,EAAD,yBAA8BtI,QAASA,GAAasI,GAApD,IAA6DlE,gBAAe,OAAEM,QAAF,IAAEA,OAAF,EAAEA,EAAUjD,SAAU6C,SAAUqE,IAA1FL,EAAQjE,QAIrC,IAAM+E,IAAY1E,GAAWA,EAASjD,WAAazB,EAAQoB,OAAOK,SAElE,OACI,oCACI,cAAC,EAAD,CAAWrD,MAAOA,EAAO+G,QAAS,kBAC9B,iCACI,wCACA,cAAC,EAAD,IAEIiE,EAAY,qCACR,cAAC,IAAD,CAAMnI,GAAE,kBAAaoD,GAArB,uCACA,cAAC,EAAD,IACA,sBAAM1G,UAAU,WAAWiD,MAAO,CAAEoD,MAAO,OAASlD,QAASwD,EAA7D,sCAEJ,qCACI,cAAC,EAAD,CAAcI,SAAUtD,EAAQuD,iBAAkB,SAAAvD,GAAM,OAAI0H,EAAW,2BAAK9I,GAAN,IAAeoB,eACrF,cAAC,EAAD,IACA,cAAC,EAAD,CAAmBpB,QAASA,EAASI,SAAU,SAAAiJ,GAAM,OAAIP,EAAWjG,EAAcwG,gBAMlG,uBACA,8CAAqBF,EAErB,uBAAM,uBACN,yCAxBJ,IAwBoB,eAAC,IAAD,CAAMlI,GAAE,gBAAWG,EAAOK,UAA1B,cAAwCL,EAAOK,YAE/D,uBAAM,uBACN,6CAAoB0C,EAEpB,uBAAM,uBACN,6CAAoBiE,EAEnB7G,GAAWA,EAAQlE,OAAS,GAAK,qCAC9B,uBAAM,uBACN,sBAAKM,UAAU,YAAf,UACI,qCADJ,IACiB4D,EAAQhE,IAAIwD,SAIjC,0CACA,6BAAKO,IAEL,0CACA,iCACI,kDACIgI,YAAY,2BACR/C,EAAc,OAAQ,CAAEqB,MAAO,CAAC,CAAEC,UAAU,IAASC,aAAc,MAF3E,IAGIlH,MAAO,CAAE2I,OAAQ,YAErB,sBAAM5L,UAAU,QAAhB,SAAyB6I,EAAc,UACvC,uBAEA,wBAAQmB,KAAK,SAAS7G,QAASiI,EAA/B,6BAEJ,6BAAKG,UCnIXM,EAAM,CACR,CAAEC,IAAK,KAAMhC,MAAO,eACpB,CAAEgC,IAAK,YAAahC,MAAO,uBAgEhBiC,EA1DF,WACT,MAA0BxB,cAAlBzG,EAAR,EAAQA,SAAUkI,EAAlB,EAAkBA,IAEVhH,EADS2C,IACS1D,MAAlBe,KACF/E,EAAU8I,cACEkD,EAAa3D,qBAAWT,GAAlCd,SAERqD,qBAAU,WAEN,IAAK4B,IAAQH,EAAIK,MAAK,qBAAGJ,MAAkBE,KAEvC,OADA/L,EAAQyJ,QAAR,gBAAyB5F,EAAzB,YAAqC+H,EAAI,GAAGC,MACrC,mBAEZ,CAACE,EAAK/L,EAAS6D,IAGlB,MAAqDhC,EAAW,aAAD,OAAcgC,GAAY,CACrF6B,aAAc,SAAAnE,GAAI,OAAIA,EAAK2F,WAD/B,IAAQ3F,KAAMuF,OAAd,MAAyB,GAAzB,EAAqCkB,EAArC,EAA6BnC,OAKvBqG,EAAWF,EAAWA,EAASnI,WAAaA,OAAWnC,EAE7D,OACI,gCACI,cAAC,EAAD,CAAWlB,MAAOqD,EAAU0D,QAAS,kBACjC,iCACI,qCACA,cAAC,EAAD,IACCT,EAASqF,KAAO,qCAAGrF,EAASqF,IAAI,cAAC,EAAD,OAE7BD,EACI,cAAC,IAAD,CAAM7I,GAAG,YAAT,gDACA,cAAC,EAAD,CAAcyD,SAAUA,EAAUC,iBAAkBiB,IAE5D,cAAC,EAAD,IACA,mBAAGZ,KAAMN,EAASsF,MAAO/E,OAAO,UAAhC,2CAGR,gCACI,uBACA,wCACCuE,EAAIjM,KAAI,SAAAoM,GAAG,OACR,wCACU,cAAC,IAAD,CAAM1I,GAAE,gBAAWQ,EAAX,YAAuBkI,EAAIF,KAAnC,SAA2CE,EAAIlC,QADzD,SAAWkC,EAAIF,WAMvB,cAAC,EAAD,CACI9G,KAAMA,EACNvB,OAAgB,cAARuI,EAAsBlI,OAAWnC,EACzCW,UAAmB,cAAR0J,EAAsBlI,OAAWnC,QCgD7C+G,iBA3GK,SAAUpJ,GAC1B,MAAmDA,EAA3CqJ,KAAQC,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,cAEvBnC,EAAO6D,cAAP7D,GACFzG,EAAU8I,cAEhB,EAAgCf,wBAASrG,GAAzC,mBAAOpC,EAAP,KAAiByJ,EAAjB,KAGA,EAA+ElH,EAAW,aAAD,OAAc4E,GAAM,CACzG5D,QAAQ,EACR6C,aAAc,SAAAnE,GAAI,kCACXA,EAAKa,SADM,IAEdgB,IAAK7B,EAAKa,QAAQuB,QAAQ9D,KAAK,UAJvC,IAAQ0B,KAAMa,OAAd,MAAwB,GAAxB,EAA4BwD,EAA5B,EAA4BA,QAAcyG,EAA1C,EAAqCtJ,IAA2BmI,EAAhE,EAAwDrF,OAQxDwF,aAAS,WAED5E,EAAI4F,IACHnB,EAAW,CACZ1K,MAAO,GACP+K,YAAa,GACb7H,KAAM,GACNN,IAAK,QAKb,IAAM6F,EAAQ,uCAAG,gCAAAC,EAAA,sEACU7J,EAAMqJ,KAAKS,iBADrB,cACPmD,EADO,OAGPlK,EAHO,2BAINkK,GAJM,IAMT3I,QAAS2I,EAASlJ,IAAI9C,MAAM,KAAKX,KAAI,SAAAyD,GAAG,OAAIA,EAAIqG,QAAQ,iBAAiB,SANhE,kBAUUJ,EAAIC,KAAK,YAAa,CAAElH,YAVlC,OAUHb,EAVG,OAWTvB,EAAQyB,KAAR,mBAAyBF,EAAKa,QAAQG,OAX7B,kDAcTmH,QAAQ5J,MAAM,KAAEsB,SAASG,KAAKoI,QAC9BZ,EAAY,KAAE3H,SAASG,KAAKoI,QAfnB,0DAAH,qDAmBd,OAAI/D,EAAgB,aAGhB,oCACI,cAAC,EAAD,CAAWpF,MAAOiG,EAAK,eAAiB,uBAExC,iCACI,cAAC,EAAD,CAAUnH,SAAUA,IAEpB,kCACI,8CACA,mCACIyK,KAAK,OACL2B,YAAY,iBACR/C,EAAc,QAAS,CAAEqB,MAAO,CAAC,CAAEC,UAAU,IAASC,aAAc9H,EAAQ5B,aAGxF,sBAAMT,UAAU,QAAhB,SAAyB6I,EAAc,WACvC,uBAEA,kCACI,oDACA,mCACImB,KAAK,OACL2B,YAAY,8BACR/C,EAAc,cAAe,CAAEqB,MAAO,CAAC,CAAEC,UAAU,IAASC,aAAc9H,EAAQmJ,mBAG9F,sBAAMxL,UAAU,QAAhB,SAAyB6I,EAAc,iBACvC,uBAEA,kCACI,gDACA,kDACI8C,YAAY,oCACR/C,EAAc,OAAQ,CAAEqB,MAAO,CAAC,CAAEC,UAAU,IAASC,aAAc9H,EAAQsB,QAFnF,IAGIV,MAAO,CAAE2I,OAAQ,eAGzB,sBAAM5L,UAAU,QAAhB,SAAyB6I,EAAc,UACvC,uBAEA,kCACI,4CACA,mCACImB,KAAK,OACL2B,YAAY,cACR/C,EAAc,MAAO,CAAEuB,aAAc9H,EAAQgB,WAGzD,sBAAMrD,UAAU,QAAhB,SAAyB6I,EAAc,SACvC,uBAEA,wBAAQmB,KAAK,SAAS7G,QAAS+F,EAA/B,wCCQDR,iBA7GC,SAAUpJ,GACtB,MAAmDA,EAA3CqJ,KAAQC,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,cACzB5I,EAAU8I,cAEhB,EAAgCf,wBAASrG,GAAzC,mBAAOpC,EAAP,KAAiByJ,EAAjB,KACA,EAAkCV,qBAAWT,GAArCd,EAAR,EAAQA,SAAUkB,EAAlB,EAAkBA,YAGLuE,EAAgB1K,GAAW,SAAAuH,GAAI,MAAK,CAAExG,IAAK,QAASD,OAAQ,MAAOpB,KAAM,CAAE6H,WAAW,CAC/FvG,QAAQ,EAERC,UAAW,YAAe,IAAZsG,EAAW,EAAXA,KACVpB,EAAYoB,GACZzH,aAAa4H,QAAQ,QAASH,EAAKI,OACnCxJ,EAAQyB,KAAR,gBAAsB2H,EAAKvF,YAG/B2I,QAAS,YAAmB,IAAhBpL,EAAe,EAAfA,SACRsI,QAAQ5J,MAAMsB,EAASG,KAAKoI,QAC5BZ,EAAY3H,EAASG,KAAKoI,WAX1B5G,IAgBF0J,EAAe,uCAAG,4BAAAvD,EAAA,6DACpBH,OAAYrH,GADQ,SAEDrC,EAAMqJ,KAAKS,iBAFV,OAEdC,EAFc,OAGpBmD,EAAYnD,GAHQ,2CAAH,qDAcrB,OAAKtC,EAGD,oCACI,cAAC,EAAD,CAAWtG,MAAM,kBAEjB,iCACI,cAAC,EAAD,CAAUlB,SAAUA,IACpB,kCACI,+CACA,mCACIyK,KAAK,OACL2B,YAAY,0BACR/C,EAAc,QAAS,CAAEuB,aAAcpD,EAASsF,OAAS,UAGrE,sBAAMrM,UAAU,QAAhB,SAAyB6I,EAAc,WACvC,uBAEA,kCACI,iDACA,mCACImB,KAAK,OACL2B,YAAY,sBACR/C,EAAc,WAAY,CAAEqB,MAAO,CAAC,CAAEC,UAAU,IAASC,aAAcpD,EAASjD,gBAG5F,sBAAM9D,UAAU,QAAhB,SAAyB6I,EAAc,cACvC,uBAEA,kCACI,4CACA,kDACI8C,YAAY,uBACR/C,EAAc,MAAO,CAAEuB,aAAcpD,EAASqF,KAAO,MAF7D,IAGInJ,MAAO,CAAE2I,OAAQ,cAGzB,sBAAM5L,UAAU,QAAhB,SAAyB6I,EAAc,SACvC,uBAEA,kCACI,8CACA,mCACImB,KAAK,OACL2B,YAAY,oBACR/C,EAAc,QAAS,CAAEqB,MAAO,CAAC,CAAEC,UAAU,IAASC,aAAcpD,EAAS4F,aAGzF,sBAAM3M,UAAU,QAAhB,SAAyB6I,EAAc,WACvC,uBAEA,kCACI,iDACA,mCACImB,KAAK,WACL2B,YAAY,sBACR/C,EAAc,WAAY,CAAEuB,aAAc,UAGtD,sBAAMnK,UAAU,QAAhB,SAAyB6I,EAAc,cACvC,uBAEA,wBAAQmB,KAAK,SAAS7G,QAASuJ,EAA/B,kCAEJ,sBAAM1M,UAAU,WAAWmD,QAxElB,WACbvB,aAAaC,WAAW,SACxBoG,OAAYtG,GACZf,OAASe,GACT1B,EAAQyB,KAAK,UAoET,sCACA,uBAAM,0BAlEQ,gBCiBXkL,MAzDf,WACI,MAAkCtE,qBAAWT,GAArCd,EAAR,EAAQA,SAAUkB,EAAlB,EAAkBA,YAEL4E,EAAkB/K,EAAW,OAAQ,CAC9CgB,QAAQ,EACRC,UAAW,SAAAvB,GAAI,OAAIyG,EAAW,OAACzG,QAAD,IAACA,OAAD,EAACA,EAAM6H,SAFjCrG,IAcR,OATAsI,aAAS,WAEL,IAAM7B,EAAQ7H,aAAakL,QAAQ,SAC9BrD,IAEL7I,EAAS6I,GACToD,QAIA,gCACI,yBAAQ7M,UAAU,wBAAlB,UACI,4BAAG,cAAC,IAAD,CAAMsD,GAAG,IAAT,uBACH,gCACI,cAAC,IAAD,CAAMA,GAAG,IAAT,kBACA,cAAC,EAAD,IACCyD,EACG,qCACI,cAAC,IAAD,CAAMzD,GAAG,UAAT,yBACA,cAAC,EAAD,IACA,cAAC,IAAD,CAAMA,GAAG,YAAT,qBACA,cAAC,EAAD,IACA,cAAC,IAAD,CAAMA,GAAE,gBAAWyD,EAASjD,UAA5B,SAAyCiD,EAASjD,cAGtD,qCACI,cAAC,IAAD,CAAMR,GAAG,SAAT,qBACA,cAAC,EAAD,IACA,cAAC,IAAD,CAAMA,GAAG,YAAT,8BAMhB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOyJ,KAAM,CAAC,YAAa,UAAWC,UAAWC,IACjD,cAAC,IAAD,CAAOF,KAAK,QAAQC,UAAW3E,IAC/B,cAAC,IAAD,CAAO0E,KAAK,eAAeC,UAAWE,IACtC,cAAC,IAAD,CAAOH,KAAM,CAAC,cAAe,WAAYC,UAAWG,IACpD,cAAC,IAAD,CAAOJ,KAAK,YAAYC,UAAWI,IACnC,cAAC,IAAD,CAAOL,KAAM,CAAC,uBAAwB,mBAAoBC,UAAWjB,IACrE,cAAC,IAAD,CAAUsB,KAAK,IAAI/J,GAAG,aAGzB8D,MCpDbkG,IAASC,OACP,cAAC,IAAD,CAAQtN,QAASA,EAAjB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJO,SAASgN,eAAe,W","file":"static/js/main.f5f034fb.chunk.js","sourcesContent":["/** 回显 api 接口返回的错误信息（校验失败信息） */\nconst ApiError = function (props) {\n    // 这个 errorMsg 应该是个对象\n    const { errorMsg } = props;\n    if (!errorMsg || Object.keys(errorMsg).length <= 0) return null;\n    \n    // 遍历对象，把每个键值对渲染成一行\n    const messageList = Object.entries(errorMsg).map(line => line.join(' '));\n    return messageList.map(error => {\n        return <div className=\"error\" key={error}>{error}</div>\n    });\n}\n\nexport default ApiError;","import { createHashHistory } from 'history';\n\nconst history = createHashHistory();\n\n/**\n * 根据当前页面状态跳转页面标题\n */\nconst changeTitle = location => {\n    const pageTitle = location.pathname.split('/').join(' ');\n    document.title = `${pageTitle} —— Conduit`;\n}\n\nhistory.listen(changeTitle);\nchangeTitle(window.location);\n\nexport default history;","import axios from 'axios';\nimport history from './history';\nimport { useRequest as useAhooksRequest } from 'ahooks';\n\n/**\n * 设置请求中携带的用户 token\n */\nexport const setToken = newToken => {\n    if (!newToken) delete axios.defaults.headers.common.authorization;\n    else axios.defaults.headers.common.authorization = `Token ${newToken}`;\n}\n\n// 后端地址\naxios.defaults.baseURL = 'https://api.realworld.io/api';\n\naxios.interceptors.response.use(\n    resp => resp.data,\n    error => {\n        // 点击需要登录的操作后跳转到登录页\n        if (error.response.status === 401) {\n            history.push('/login');\n            setToken(undefined);\n            localStorage.removeItem('token');\n        }\n        // 未知请求就跳转回首页\n        else if (error.response.status === 404) {\n            history.push('/home');\n        }\n\n        throw error;\n    }\n);\n\n// 使用 axios 作为请求方法\nexport const useRequest = function (service, options) {\n    return useAhooksRequest(service, {\n        ...options,\n        requestMethod: params => axios(params),\n    });\n}\n\nexport default axios;","import { useRequest } from '@/plugins/api';\n\n/** 文章喜欢按钮 */\nconst ArticleLikeButton = function (props) {\n    const { article: { favorited, favoritesCount, slug }, onChange } = props;\n\n    // 按钮显示内容\n    const likeLabel = `${favorited ? '💗 liked' : '🤍 like'} ${favoritesCount}`;\n\n    const { run: onClickLike } = useRequest({\n        method: favorited ? 'delete' : 'post',\n        url: `/articles/${slug}/favorite`\n    }, {\n        manual: true,\n        // 喜欢成功后更新文章数据以刷新按钮\n        onSuccess: data => onChange(data.article)\n    });\n\n    return (\n        <span style={{ fontSize: 'medium' }} className=\"link-btn\" onClick={onClickLike}>\n            {likeLabel}\n        </span>\n    )\n}\n\nexport default ArticleLikeButton;","import { Link } from 'react-router-dom';\n\n/**\n * 渲染指定 tag\n * @param {string} tag 要显示的内容\n */\nconst Tag = function (tag) {\n    return (\n        <span key={tag}>\n            &nbsp;<Link to={{ pathname: '/home', search: `?tag=${tag}` }}>{tag}</Link>&nbsp;\n        </span>\n    )\n}\n\nexport default Tag;","import Tag from '@/components/Tag';\nimport { Link } from 'react-router-dom';\nimport ArticleLikeButton from '@/components/ArticleLikeButton';\n\n/** 列表中的单条文章 */\nconst FeedItem = function (props) {\n    const { title, author, timeLabel, body, tagList, slug, updateItem } = props;\n\n    return (\n        <li>\n            {/* 标题和喜欢按钮 */}\n            <h2>\n                <Link to={`/article/${slug}`}>{title}</Link>&nbsp;&nbsp;\n                <ArticleLikeButton article={props} onChange={updateItem}/>\n            </h2>\n\n            <ul>\n                <li>\n                    <b>Author:</b> <Link to={`/user/${author.username}/my`}> {author.username}</Link>\n                </li>\n\n                <li><b>Update at:</b> {timeLabel}</li>\n\n                {/* 标签列表 */}\n                {tagList && tagList.length > 0 && <li>\n                    <b>Tag:</b> {tagList.map(Tag)}\n                </li>}\n            </ul>\n\n            <p>{body}</p>\n        </li>\n    );\n}\n\nexport default FeedItem;","import Qs from 'qs';\n\n/**\n * 将新的查询字段合并到当前的 url queryString 并返回对应字符串\n */\nconst mergeQuery = function (newQuery) {\n    const query = {\n        ...Qs.parse(window.location.search, { ignoreQueryPrefix: true }),\n        ...newQuery\n    }\n    return Qs.stringify(query)\n}\n\nexport default mergeQuery;","import { Link } from 'react-router-dom';\nimport mergeQuery from '@/plugins/mergeQuery';\n\n/** 分页组件 */\nconst Pagination = function (props) {\n    const { total, size = 10 } = props;\n\n    const maxPage = Math.ceil(total / size);\n    // 根据当前分页和最大数量确定有多少页，并渲染对应的 link\n    return Array(maxPage).fill().map((_, index) => (\n        <span key={index}>\n            &nbsp;\n            <Link to={location => {\n                return `${location.pathname}?${mergeQuery({ page: index })}`\n            }}>{index + 1}</Link>\n            &nbsp;\n        </span>\n    ));\n}\n\nexport default Pagination;","import { useMemo } from 'react';\nimport { useRequest } from '@/plugins/api';\nimport FeedItem from '@/components/FeedItem';\nimport Pagination from '@/components/Pagination';\nimport dayjs from 'dayjs';\n\n/** 每页展示的文章数量 */\nconst NUMBER_PER_PAGE = 10;\n\n/**\n * 文章列表\n * props 为查询列表需要的条件 \n */\nconst ArticleList = function (props) {\n    const { tag, page = 0, author, favorited, url = '/articles' } = props;\n    \n    const formatArticle = article => ({\n        ...article,\n        // 格式化日期\n        timeLabel: dayjs(article.updatedAt).format('YYYY-MM-DD HH:mm:ss')\n    });\n\n    // 列表获取接口有可能是文章列表，也有可能是我的关注，所以这里的 url 可以被外部指定\n    const service = {\n        url,\n        params: {\n            author, favorited, tag,\n            limit: NUMBER_PER_PAGE,\n            offset: page * NUMBER_PER_PAGE\n        }\n    }\n\n    // 发起请求\n    const { data: { articles, total }, error, loading, mutate } = useRequest(service, {\n        initialData: { articles: [], total: 0 },\n        refreshDeps: [author, favorited, url, tag, page],\n        formatResult: ({ articles, articlesCount: total }) => ({ articles: articles.map(formatArticle), total })\n    });\n\n    // 总页数变更了就重新渲染分页项\n    const paginationGroup = useMemo(() => <Pagination total={total} size={NUMBER_PER_PAGE} />, [total]);\n\n    // 回调 - 突变文章\n    // 用于更新文章的喜欢状态\n    const onItemUpdate = newArticle => {\n        const newList = articles.map(item => {\n            return (item.slug === newArticle.slug) ? formatArticle(newArticle) : item;\n        });\n\n        mutate({ articles: newList, total });\n    }\n\n    // 加载校验\n    if (error) return <p style={{ color: 'red' }}>loading fail!</p>\n    if (loading) return <p>loading...</p>\n    if (articles.length === 0) return <p>No articles are here... yet.</p>\n\n    return (\n        <>\n            <section>\n                <ul>\n                    {articles.map(feed => <FeedItem key={feed.slug} {...feed} updateItem={onItemUpdate} />)}\n                </ul>\n            </section>\n    \n            {total > 0 && <nav className=\"flex-wrap\">\n                <b>Pagination: </b>\n                {paginationGroup}\n                <br /><br />\n            </nav>}\n        </>\n    );\n}\n\nexport default ArticleList;","import { useRequest } from '@/plugins/api';\n\n/** 单条评论 */\nconst CommentItem = function (props) {\n    const { author, createTime, body, currentUserName, id, article: { slug }, onDelete } = props;\n\n    // 请求 - 删除评论\n    const { run: onDeleteComment } = useRequest({\n        url: `/articles/${slug}/comments/${id}`, method: 'delete'\n    }, {\n        manual: true,\n        // 删除成功后触发外界重新加载列表\n        onSuccess: onDelete\n    })\n\n    let deleteContent = null;\n    // 如果是自己写的，就显示删除按钮\n    if (currentUserName === author.username) {\n        deleteContent = (\n            <span className=\"link-btn\" style={{ color: 'red' }} onClick={onDeleteComment}>\n                ❌ Delete Comment\n            </span>\n        );\n    }\n\n    return (\n        <li>\n            <p>{body} {deleteContent}</p>\n\n            <ul>\n                <li><b>Author:</b> {author.username}</li>\n                <li><b>Update at:</b> {createTime}</li>\n            </ul>\n        </li>\n    );\n}\n\nexport default CommentItem;","import { useRequest } from '@/plugins/api';\n\n/** 文章喜欢按钮 */\nconst FollowButton = function (props) {\n    const { userInfo, onUserInfoChange } = props;\n\n    // 请求 - 点击喜欢按钮\n    const { run: onChangeFollow } = useRequest({\n        url: `/profiles/${userInfo.username}/follow`,\n        // 如果已经喜欢的话就取消喜欢\n        method: userInfo.following ? 'delete' : 'post'\n    }, {\n        manual: true,\n        // 请求成功后把新的文章数据更新回列表\n        onSuccess: data => onUserInfoChange(data.profile)\n    })\n\n    return (\n        <span className=\"link-btn\" onClick={onChangeFollow}>\n            {`${userInfo.following ? '😀 unfollow' : '😶 follow'} ${userInfo.username}`}\n        </span>\n    )\n}\n\nexport default FollowButton;","/** 全局通用页脚，所以只渲染一次 */\nexport const footer = (\n    <div className=\"page-part\">\n        <p className=\"flex-wrap flex-center\">\n            <b>Github:</b>\n            &nbsp;\n            <a href=\"https://github.com/HoPGoldy/realworld-classic-web\" target=\"__blank\">RealWorld</a>\n            &nbsp;&nbsp;\n            <b>Author:</b>\n            &nbsp;\n            <a href=\"https://github.com/HoPGoldy\" target=\"__blank\">@HoPGoldy</a>\n        </p>\n    </div>\n)","/** 全局的淡蓝色标题 */\nconst PageTitle = function ({ title, summary }) {\n    // 简介可以自定义渲染\n    const summaryContent = !summary ? null :\n        <p>{typeof summary === 'function' ? summary() : summary}</p>;\n\n    return (\n        <div className=\"page-part\">\n            <h1>{title}</h1>\n            {summaryContent}\n        </div>\n    )\n}\n\nexport default PageTitle;","/** 一个简单的分隔符 */\nconst Separator = function () {\n    return <span>&nbsp;&nbsp;|&nbsp;&nbsp;</span>\n}\n\nexport default Separator;","import { useLocation as useOriginLocation } from 'react-router-dom';\nimport Qs from 'qs';\n\n/**\n * 自定义 location\n * 在原始 location 的基础上将 search 字符串解析为 query 对象\n */\nconst useLocation = function () {\n    const location = useOriginLocation();\n    return { ...location, query: Qs.parse(location.search, { ignoreQueryPrefix: true }) }\n}\n\nexport default useLocation;","import { useState, createContext } from 'react';\n \nexport const userContext = createContext();\n\n/**\n * 全局注入用户登录信息\n */\nexport const LoginProvider = props => {\n    const [userInfo, setUserInfo] = useState(undefined);\n \n    return (\n        <userContext.Provider value={{ userInfo, setUserInfo }}>\n            {props.children}\n        </userContext.Provider>\n    );\n};","import { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { ArticleList, Tag, PageTitle } from '@/components';\nimport { useRequest } from '@/plugins/api';\nimport useLocation from '@/plugins/useLocation';\nimport { userContext } from '@/plugins/userContext';\n\n/**\n * 入口首页\n */\nconst Home = function () {\n    const { userInfo } = useContext(userContext);\n    const location = useLocation();\n    const { tag, page = 0, yourFeed } = location.query;\n\n    // 获取热门标签信息\n    const { data: tags = [] } = useRequest('/tags', { formatResult: data => data.tags });\n    // 根据当前选择的 tab 页确定要查询的接口\n    const queryUrl = (userInfo && yourFeed) ? '/articles/feed' : '/articles';\n\n    return (\n        <div>\n            <PageTitle title=\"Conduit\" summary=\"A place to share your knowledge.\"/>\n\n            <nav>\n                <br />\n                <div className=\"flex-wrap\">\n                    <b>Popular Tags: </b>{tags.map(Tag)}\n                </div>\n\n                <br />\n                <b>Views: </b>\n                <Link to=\"/home\">global feed</Link>&nbsp;&nbsp;\n                {tag && (<>\n                    <Link to={`/home?tag=${tag}`}>#{tag}</Link>&nbsp;&nbsp;\n                </>)}\n                {/* 登录之后再显示该标签页 */}\n                {userInfo && <Link to={`/home?yourFeed=1`}>Your Feed</Link>}\n            </nav>\n\n            <ArticleList url={queryUrl} tag={tag} page={page}/>\n        </div>\n    );\n}\n\nexport default Home;","import { useState, useContext, useEffect } from 'react';\nimport { useHistory, Link, useLocation } from 'react-router-dom';\nimport { createForm } from 'rc-form';\nimport { userContext } from '@/plugins/userContext';\nimport { PageTitle, ApiError } from '@/components';\nimport api, { setToken } from '@/plugins/api';\n\n/**\n * 登录 / 注册页面\n */\nconst Login = function (props) {\n    const { form: { getFieldProps, getFieldError, resetFields } } = props;\n    const { setUserInfo } = useContext(userContext);\n    const history = useHistory();\n    const location = useLocation();\n    // 后端校验报错\n    const [errorMsg, setErrorMsg] = useState(undefined);\n\n    // 判断当前是否为登录页，还是注册页\n    const isLoginPage = () => location.pathname === '/login';\n\n    // 回调 - 进行登录或进行注册\n    const onSubmit = async () => {\n        const user = await props.form.validateFields();\n        setErrorMsg(undefined);\n\n        try {\n            // 根据当前页面状态决定是登录还是注册\n            const url = isLoginPage() ? 'users/login' : 'users';\n            const data = await api.post(url, { user });\n\n            // 成功后把用户信息保存到本地并更新应用状态\n            localStorage.setItem('token', data.user.token);\n            setToken(data.user.token);\n            setUserInfo(data.user);\n            \n            history.replace('/home');\n        }\n        catch (e) {\n            // 登录失败\n            console.error(e.response.data.errors);\n            setErrorMsg(e.response.data.errors);\n        }\n    }\n\n    // 渲染表单字段\n    const renderField = (label, field, type) => (\n        <>\n            <label>\n                {label}:\n                <input {...getFieldProps(field, { rules: [{ required: true }], initialValue: '' })} type={type || 'text'} />\n            </label>\n            <span className=\"error\">{getFieldError(field)}</span>\n            <br />\n        </>\n    );\n\n    // 页面发生变更后就清空报错信息并重置输入\n    useEffect(() => {\n        setErrorMsg([]);\n        resetFields();\n    }, [location.pathname, resetFields]);\n\n    // 根据当前状态确定登录 / 注册页头\n    const titleContent = isLoginPage() ?\n        <PageTitle title=\"Sign in\" summary={() => <Link to=\"/register\">Need an account?</Link>}/> :\n        <PageTitle title=\"Sign up\" summary={() => <Link to=\"/login\">Have an account?</Link>}/>;\n\n    return (\n        <section>\n            {titleContent}\n\n            <form>\n                <ApiError errorMsg={errorMsg} />\n\n                {!isLoginPage() && renderField('Username', 'username')}\n                {renderField('Email', 'email')}\n                {renderField('Password', 'password', 'password')}\n                <br />\n\n                <button type=\"button\" onClick={onSubmit}>\n                    {isLoginPage() ? 'Sign in' : 'Sign up'}\n                </button>\n            </form>\n        </section>\n    );\n}\n\nexport default createForm()(Login);","import { useParams, Link, useHistory } from 'react-router-dom';\nimport PageTitle from '@/components/PageTitle';\nimport api, { useRequest } from '@/plugins/api';\nimport { useContext } from 'react';\nimport { useMount } from 'ahooks';\nimport { userContext } from '@/plugins/userContext';\nimport { createForm } from 'rc-form';\nimport { Tag, CommentItem, FollowButton, ArticleLikeButton, Separator } from '@/components';\nimport dayjs from 'dayjs';\n\n/**\n * 文章正文页面\n */\nconst Article = function (props) {\n    const { form: { getFieldProps, getFieldError, setFieldsValue } } = props;\n    const history = useHistory();\n    // 当前文章 id\n    const { id } = useParams();\n    // 当前用户信息\n    const { userInfo } = useContext(userContext);\n\n    const formatArticle = article => ({\n        ...article,\n        createTime: dayjs(article.createdAt).format('YYYY-MM-DD HH:mm:ss'),\n        updateTime: dayjs(article.updatedAt).format('YYYY-MM-DD HH:mm:ss')\n    })\n\n    const formatComment = comment => ({\n        ...comment,\n        createTime: dayjs(comment.createdAt).format('YYYY-MM-DD HH:mm:ss')\n    })\n\n    // 接口 - 获取评论\n    const {\n        data: comments = [], loading: commentLoading, error: commentError, run: fetchAtriclComment\n    } = useRequest(`/articles/${id}/comments`, {\n        manual: true,\n        formatResult: data => data.comments.map(formatComment),\n        loadingDelay: 1000\n    });\n\n    // 接口 - 获取文章详情\n    const {\n        data: article, loading: articleLoading, error: articleError, mutate: setArticle\n    } = useRequest(`/articles/${id}`, {\n        formatResult: data => formatArticle(data.article)\n    });\n\n    // 回调 - 提交评论\n    const onSubmitComment = async () => {\n        const comment = await props.form.validateFields();\n        await api.post(`/articles/${id}/comments`, { comment });\n        // 提交成功后清空输入框并重新加载评论\n        setFieldsValue({ body: '' });\n        fetchAtriclComment();\n    }\n\n    // 回调 -删除文章\n    const onDelete = async () => {\n        await api.delete(`/articles/${id}`);\n        // 删除成功后返回用户页面\n        history.replace(`/user/${userInfo.username}`);\n    }\n\n    useMount(fetchAtriclComment);\n\n    // 载入校验\n    if (articleLoading) return <p>Loading...</p>;\n    if (articleError) return <p style={{ color: 'red' }}>article loading fail!</p>;\n\n    const { title, description, createTime, updateTime, body, author, tagList } = article;\n\n    // 评论载入校验\n    let commentContent;\n    if (commentError) commentContent = <p style={{ color: 'red' }}>comments loading fail!</p>;\n    else if (commentLoading) commentContent = 'loading...';\n    else if (comments.length <= 0) commentContent = 'No Comments.';\n    else if (comments.length > 0) commentContent = comments.map(comment => {\n        // 给评论传入当前用户信息，用于比对是否显示评论删除按钮\n        return <CommentItem key={comment.id} article={article} {...comment} currentUserName={userInfo?.username} onDelete={fetchAtriclComment}/>;\n    });\n\n    // 是否为自己编辑\n    const myArticle = userInfo ? userInfo.username === article.author.username : false;\n\n    return (\n        <section>\n            <PageTitle title={title} summary={() => (\n                <span>\n                    <b>Article</b>\n                    <Separator />\n                    {\n                        myArticle ? <>\n                            <Link to={`/editor/${id}`}>📝 Edit article</Link>\n                            <Separator />\n                            <span className=\"link-btn\" style={{ color: 'red' }} onClick={onDelete}>❌ Delete article</span>\n                        </> :\n                        <>\n                            <FollowButton userInfo={author} onUserInfoChange={author => setArticle({ ...article, author })} />\n                            <Separator />\n                            <ArticleLikeButton article={article} onChange={detail => setArticle(formatArticle(detail))} />\n                        </>\n                    }\n                </span>\n            )}/>\n\n            <br />\n            <b>Description: </b>{description}\n\n            <br /><br />\n            <b>Author: </b> <Link to={`/user/${author.username}`}> {author.username}</Link>\n\n            <br /><br />\n            <b>Created at: </b>{createTime}\n\n            <br /><br />\n            <b>Updated at: </b>{updateTime}\n\n            {tagList && tagList.length > 0 && <>\n                <br /><br />\n                <div className=\"flex-wrap\">\n                    <b>Tag:</b> {tagList.map(Tag)}\n                </div>\n            </>}\n\n            <h2>Content:</h2>\n            <ul>{body}</ul>\n\n            <h2>Comment:</h2>\n            <form>\n                <textarea\n                    placeholder=\"type your comment here.\"\n                    {...getFieldProps('body', { rules: [{ required: true }], initialValue: '' })}\n                    style={{ height: '100px' }}\n                />\n                <span className=\"error\">{getFieldError('body')}</span>\n                <br />\n\n                <button type=\"button\" onClick={onSubmitComment}>Post Comment</button>\n            </form>\n            <ul>{commentContent}</ul>\n        </section>\n    );\n}\n\nexport default createForm()(Article);","\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { useEffect, useContext } from 'react';\nimport { PageTitle, ArticleList, FollowButton, Separator } from '@/components';\nimport useLocation from '@/plugins/useLocation';\nimport { userContext } from '@/plugins/userContext';\nimport { useRequest } from '@/plugins/api';\n\n// 用户的两个标签页\nconst TAB = [\n    { key: 'my', label: 'My Articles' },\n    { key: 'favorited', label: 'Favorited Articles' }\n]\n\n/**\n * 用户信息页面\n */\nconst User = function () {\n    const { username, tab } = useParams();\n    const location = useLocation();\n    const { page } = location.query;\n    const history = useHistory();\n    const { userInfo: selfInfo } = useContext(userContext);\n\n    useEffect(() => {    \n        // 当前没有 tab 选中或者选中了未知的 tab，重定向\n        if (!tab || !TAB.find(({ key }) => key === tab)) {\n            history.replace(`/user/${username}/${TAB[0].key}`);\n            return 'Redirecting...';\n        }\n    }, [tab, history, username]);\n\n    // 请求 - 获取用户信息\n    const { data: userInfo = [], mutate: setUserInfo } = useRequest(`/profiles/${username}`, {\n        formatResult: data => data.profile\n    });\n\n    // 该用户是否为自己\n    const isMyself = selfInfo ? selfInfo.username === username : undefined;\n\n    return (\n        <div>\n            <PageTitle title={username} summary={() => (\n                <span>\n                    <b>User</b>\n                    <Separator />\n                    {userInfo.bio && <>{userInfo.bio}<Separator /></>}\n                    {\n                        isMyself ?\n                            <Link to=\"/settings\">🔨 Edit Profile Settings</Link> :\n                            <FollowButton userInfo={userInfo} onUserInfoChange={setUserInfo} />\n                    }\n                    <Separator />\n                    <a href={userInfo.image} target=\"__blank\">🎫 see Avatar</a></span>\n            )}/>\n\n            <nav>\n                <br />\n                <b>Views: </b>\n                {TAB.map(tab => (\n                    <span key={tab.key}>\n                        &nbsp;<Link to={`/user/${username}/${tab.key}`}>{tab.label}</Link>&nbsp;\n                    </span>\n                ))}\n            </nav>\n\n            <ArticleList\n                page={page}\n                author={tab !== 'favorited' ? username : undefined}\n                favorited={tab === 'favorited' ? username : undefined}\n            />\n        </div>\n    );\n}\n\nexport default User;","import { useParams, useHistory } from 'react-router-dom';\nimport { PageTitle, ApiError } from '@/components';\nimport api, { useRequest } from '@/plugins/api';\nimport { createForm } from 'rc-form';\nimport { useState } from 'react';\nimport { useMount } from 'ahooks';\n\n/**\n * 文章编辑 / 新增页面\n */\nconst EditArticle = function (props) {\n    const { form: { getFieldProps, getFieldError } } = props;\n    // 当前编辑的文章 id，为空代表新增\n    const { id } = useParams();\n    const history = useHistory();\n    // 文章编辑的后端校验报错\n    const [errorMsg, setErrorMsg] = useState(undefined);\n\n    // 请求 - 获取文章正文\n    const { data: article = {}, loading, run: fetchArticle, mutate: setArticle } = useRequest(`/articles/${id}`, {\n        manual: true,\n        formatResult: data => ({\n            ...data.article,\n            tag: data.article.tagList.join(',')\n        })\n    });\n\n    useMount(() => {\n        // 挂载时有文章 id 就进行加载，否则加载默认空\n        if (id) fetchArticle();\n        else setArticle({\n            title: '',\n            description: '',\n            body: '',\n            tag: ''\n        });\n    });\n\n    // 回调 - 提交文章内容\n    const onSubmit = async () => {\n        const formData = await props.form.validateFields();\n\n        const article = {\n            ...formData,\n            // 分隔 tag 并去除前后空格\n            tagList: formData.tag.split(',').map(tag => tag.replace(/(^\\s*)|(\\s*$)/g,\"\"))\n        }\n\n        try {\n            const data = await api.post('/articles', { article });\n            history.push(`/article/${data.article.slug}`);\n        }\n        catch (e) {\n            console.error(e.response.data.errors);\n            setErrorMsg(e.response.data.errors);\n        }\n    }\n\n    if (loading) return 'loading...';\n\n    return (\n        <section>\n            <PageTitle title={id ? 'Edit Article' : 'Create new Article'}/>\n\n            <form>\n                <ApiError errorMsg={errorMsg} />\n\n                <label>\n                    <summary>Title: </summary>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Article Title\"\n                        {...getFieldProps('title', { rules: [{ required: true }], initialValue: article.title })}\n                    />\n                </label>\n                <span className=\"error\">{getFieldError('title')}</span>\n                <br />\n\n                <label>\n                    <summary>Description: </summary>\n                    <input\n                        type=\"text\"\n                        placeholder=\"What's this article about?\"\n                        {...getFieldProps('description', { rules: [{ required: true }], initialValue: article.description })}\n                    />\n                </label>\n                <span className=\"error\">{getFieldError('description')}</span>\n                <br />\n\n                <label>\n                    <summary>Content: </summary>\n                    <textarea\n                        placeholder=\"Write your article (in markdown)\"\n                        {...getFieldProps('body', { rules: [{ required: true }], initialValue: article.body })}\n                        style={{ height: '100px' }}\n                    />\n                </label>\n                <span className=\"error\">{getFieldError('body')}</span>\n                <br />\n\n                <label>\n                    <summary>Tag: </summary>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter tags\"\n                        {...getFieldProps('tag', { initialValue: article.tag })}\n                    />\n                </label>\n                <span className=\"error\">{getFieldError('tag')}</span>\n                <br />\n\n                <button type=\"button\" onClick={onSubmit}> Publish Article </button>\n            </form>\n        </section>\n    );\n}\n\nexport default createForm()(EditArticle);","import { useHistory } from 'react-router-dom';\nimport { PageTitle, ApiError } from '@/components';\nimport { useRequest, setToken } from '@/plugins/api';\nimport { createForm } from 'rc-form';\nimport { useState, useContext } from 'react';\nimport { userContext } from '@/plugins/userContext';\n\n/**\n * 用户设置页面\n */\nconst Profile = function (props) {\n    const { form: { getFieldProps, getFieldError } } = props;\n    const history = useHistory();\n    // 后端校验错误信息\n    const [errorMsg, setErrorMsg] = useState(undefined);\n    const { userInfo, setUserInfo } = useContext(userContext);\n\n    // 请求 - 上传新的用户配置\n    const { run: postSetting } = useRequest(user => ({ url: '/user', method: 'put', data: { user } }), {\n        manual: true,\n        // 成功之后把信息更新到本地\n        onSuccess: ({ user }) => {\n            setUserInfo(user);\n            localStorage.setItem('token', user.token);\n            history.push(`/user/${user.username}`);\n        },\n        // 失败之后显示报错信息\n        onError: ({ response }) => {\n            console.error(response.data.errors);\n            setErrorMsg(response.data.errors);\n        }\n    })\n\n    // 回调 - 点击提交请求按钮\n    const onSubmitSetting = async () => {\n        setErrorMsg(undefined);\n        const user = await props.form.validateFields();\n        postSetting(user);\n    }\n\n    // 回调 - 点击登出按钮\n    const onLogout = () => {\n        localStorage.removeItem('token');\n        setUserInfo(undefined);\n        setToken(undefined);\n        history.push('/home');\n    }\n\n    if (!userInfo) return 'loading...';\n\n    return (\n        <section>\n            <PageTitle title=\"Your Settings\" />\n\n            <form>\n                <ApiError errorMsg={errorMsg} />\n                <label>\n                    <summary>Avatar: </summary>\n                    <input\n                        type=\"text\"\n                        placeholder=\"URL of profile picture\"\n                        {...getFieldProps('image', { initialValue: userInfo.image || '' })}\n                    />\n                </label>\n                <span className=\"error\">{getFieldError('image')}</span>\n                <br />\n\n                <label>\n                    <summary>Username: </summary>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Your username here\"\n                        {...getFieldProps('username', { rules: [{ required: true }], initialValue: userInfo.username })}\n                    />\n                </label>\n                <span className=\"error\">{getFieldError('username')}</span>\n                <br />\n\n                <label>\n                    <summary>BIO: </summary>\n                    <textarea\n                        placeholder=\"Short bio about you\"\n                        {...getFieldProps('bio', { initialValue: userInfo.bio || ''})}\n                        style={{ height: '50px' }}\n                    />\n                </label>\n                <span className=\"error\">{getFieldError('bio')}</span>\n                <br />\n\n                <label>\n                    <summary>Email: </summary>\n                    <input\n                        type=\"text\"\n                        placeholder=\"your login email\"\n                        {...getFieldProps('email', { rules: [{ required: true }], initialValue: userInfo.email })}\n                    />\n                </label>\n                <span className=\"error\">{getFieldError('email')}</span>\n                <br />\n\n                <label>\n                    <summary>Password: </summary>\n                    <input\n                        type=\"password\"\n                        placeholder=\"Enter new password\"\n                        {...getFieldProps('password', { initialValue: '' })}\n                    />\n                </label>\n                <span className=\"error\">{getFieldError('password')}</span>\n                <br />\n\n                <button type=\"button\" onClick={onSubmitSetting}> Update Settings </button>\n            </form>\n            <span className=\"link-btn\" onClick={onLogout}>Or click here to logout.</span>\n            <br /><br />\n        </section>\n    );\n}\n\nexport default createForm()(Profile);","import { useContext } from \"react\";\nimport { Home, Login, Article, User, EditArtcle, Profile } from \"./pages\";\nimport { Route, Switch, Redirect, Link } from \"react-router-dom\";\nimport { Separator, footer } from \"@/components\";\nimport { userContext } from \"@/plugins/userContext\";\nimport { setToken, useRequest } from \"@/plugins/api\";\nimport { useMount } from 'ahooks';\n\nfunction App() {\n    const { userInfo, setUserInfo } = useContext(userContext);\n\n    const { run: fetchUserInfo } = useRequest('user', {\n        manual: true,\n        onSuccess: data => setUserInfo(data?.user)\n    });\n\n    useMount(() => {\n        // 如果本地有 token 的话，就尝试用其获取用户信息\n        const token = localStorage.getItem(\"token\");\n        if (!token) return;\n\n        setToken(token);\n        fetchUserInfo();\n    });\n\n    return (\n        <div>\n            <header className=\"header-area flex-wrap\">\n                <b><Link to=\"/\">conduit</Link></b>\n                <div>\n                    <Link to=\"/\">Home</Link>\n                    <Separator />\n                    {userInfo ? (\n                        <>\n                            <Link to=\"/editor\">New Article</Link>\n                            <Separator />\n                            <Link to=\"/settings\">Setting</Link>\n                            <Separator />\n                            <Link to={`/user/${userInfo.username}`}>{userInfo.username}</Link>\n                        </>\n                    ) : (\n                        <>\n                            <Link to=\"/login\">Sign in</Link>\n                            <Separator />\n                            <Link to=\"/register\">Sign up</Link>\n                        </>\n                    )}\n                </div>\n            </header>\n\n            <Switch>\n                <Route path={[\"/register\", \"/login\"]} component={Login} />\n                <Route path=\"/home\" component={Home} />\n                <Route path=\"/article/:id\" component={Article} />\n                <Route path={[\"/editor/:id\", \"/editor\"]} component={EditArtcle} />\n                <Route path=\"/settings\" component={Profile} />\n                <Route path={[\"/user/:username/:tab\", \"/user/:username\"]} component={User} />\n                <Redirect from=\"/\" to=\"/home\" />\n            </Switch>\n\n            {footer}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Router } from 'react-router-dom';\nimport { LoginProvider } from '@/plugins/userContext';\nimport history from './plugins/history';\n\nReactDOM.render(\n  <Router history={history}>\n    <LoginProvider>\n      <App />\n    </LoginProvider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}